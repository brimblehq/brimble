version: 2.1

executors:
  node-executor:
    docker:
      - image: cimg/node:16.20.2
    environment:
      PKG_OUTPUT: builds

jobs:
  build_and_release:
    executor: node-executor
    steps:
      - checkout
      - run:
          name: Set up Git
          command: |
            git config --global user.email "dave@brimble.app"
            git config --global user.name "Muritala David"
      - restore_cache:
          keys:
            - v1-yarn-deps-{{ checksum "yarn.lock" }}
            - v1-yarn-deps-
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          key: v1-yarn-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - ~/.cache/yarn
      - run:
          name: Install pkg globally
          command: yarn global add pkg
      - run:
          name: Build cli
          command: yarn install --frozen-lockfile && yarn build
      - run:
          name: Build for target platforms
          command: yarn pre:release
      - run:
          name: Setup GitHub CLI
          command: |
            if [[ $CIRCLE_TAG == v* ]]; then
              sudo apt-get update && sudo apt-get install -y curl
              curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
              echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
              sudo apt update && sudo apt install gh -y
              gh auth login --with-token <<< "$GH_TOKEN"
            fi
      - run:
          name: Create GitHub release
          command: |
            if [[ $CIRCLE_TAG == v* ]]; then
              gh release create $CIRCLE_TAG \
                --title "Release $CIRCLE_SHA1" \
                --notes "Build artifacts: macos, linux & windows" \
                builds/*
            fi
      - run:
          name: Final clean up
          command: rm -rf builds

workflows:
  version: 2
  build_and_release_workflow:
    jobs:
      - build_and_release:
          filters:
            branches:
              ignore: main
            tags:
              only: /^v.*/